@mixin font_size($size, $line_height: 1.5) {
 
    font-size:      $size;
    line-height:    $size * $line_height; 
    
}

@mixin line_height($height, $font_size: 1.5) {
 
    font-size:      calc($height / $font_size);
    line-height:    $height; 
    
}


@mixin absolute($top: 0px, $left: 0px, $width: 100%, $height: 100%) {
    
    position:   absolute;
    top:        $top; 
    left:       $left;
    width:      $width;
    height:     $height;
    
}

@mixin border_radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}

@mixin rotate($angle) {

    -webkit-transform: rotate($angle);
       -moz-transform: rotate($angle);
         -o-transform: rotate($angle);
        -ms-transform: rotate($angle);
            transform: rotate($angle);
    
}



@mixin flexbox() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin flex($values) {
    -webkit-box-flex: $values;
       -moz-box-flex: $values;
        -webkit-flex: $values;
            -ms-flex: $values;
                flex: $values;
}

@mixin order($val) {
   -webkit-box-ordinal-group: $val;  
      -moz-box-ordinal-group: $val;     
              -ms-flex-order: $val;     
               -webkit-order: $val;  
                       order: $val;
}

/*.wrapper {
  @include flexbox();
}

.item {
  @include flex(1 200px);
  @include order(2);
}*/






@mixin media_breakpoint($minWidth: 0, $maxWidth: 0, $minHeight: 0, $maxHeight: 0) {
    
    $type: type-of($minWidth);
       
    @if $type == string {
        $class: $minWidth; 
  
      @if $class == xs {
          @media (max-width: 767px) { @content; }
        }
       
        @else if $class == sm {
          @media (min-width: 768px) { @content; }
        }
       
        @else if $class == md {
          @media (min-width: 992px) { @content; }
        }
       
        @else if $class == lg {
          @media (min-width: 1200px) { @content; }
        }
       
        @else {
          @warn "Breakpoint mixin supports: xs, sm, md, lg";
        }
    }
    @else if $type == number {
        $widthQuery: "all" !default;
  
        // width
        @if $minWidth != 0 and $maxWidth != 0 { 
          $widthQuery: "(min-width: #{$minWidth}) and (max-width: #{$maxWidth})";
        }
        @else if $minWidth != 0 and $maxWidth == 0 { 
          $widthQuery: "(min-width: #{$minWidth})"; 
        }
        @else if $minWidth == 0 and $maxWidth != 0 { 
          $widthQuery: "(max-width: #{$maxWidth})"; 
        }
  
        // height
        $heightQuery: 0;
        @if $minHeight != 0 and $maxHeight != 0 { 
          $heightQuery: "(min-height: #{$minHeight}) and (max-height: #{$maxHeight})";
        }
        @else if $minHeight != 0 and $maxHeight == 0 { 
          $heightQuery: "(min-height: #{$minHeight})"; 
        }
        @else if $minHeight == 0 and $maxHeight != 0 { 
          $heightQuery: "(max-height: #{$maxHeight})"; 
        }
  
        @if $minHeight != 0{
            @media #{$widthQuery} and #{$heightQuery} { 
              @content;
            }
          }
        @else if $maxHeight != 0{
            @media #{$widthQuery} and #{$heightQuery} { 
              @content;
            }
        }
        @else if $minHeight != 0 and $maxHeight != 0{
            @media #{$widthQuery} and #{$heightQuery} { 
              @content;
            }
        }
        @else {
            @media #{$widthQuery} { 
              @content;
            }
          }
  
    }

}